// Converts a px value to rems. Should only work in absolute em document context (root level), unless $context is specified
@function px-to-rem($value, $context: $rootsize-base) {
  @if unit($context) == "rem" {
    $context: rem-to-px($context);
  }
  @if unit($value) == "px" {
    $value: strip-unit($value) / strip-unit($context);
    $value: $value * 1rem;
  }
  @return $value;
}

// Converts an rem value to px. Should only work in absolute em document context (root level)
@function rem-to-px($value, $context: $rootsize-base) {
  @if unit($value) == "rem" {
    $value: strip-unit($value) * strip-unit($rootsize-base);
    $value: $value * 1px;
  }
  @return $value;
}

/// Append pseudo-classes to a selector(s).
///
/// @argument {list | string} $inputs
///   A selector, or list of selectors, to apply the pseudo-class to.
///
/// @argument {pseudo-class} $pseudo [null]
///   The pseudo-class to be appended.
///
/// @return {list}
///
/// @access private

@function assign-inputs($inputs, $pseudo: null) {
  $list: ();

  @each $input in $inputs {
    $input: unquote($input);
    $input: if($pseudo, $input + ":" + $pseudo, $input);
    $list: append($list, $input, comma);
  }

  @return $list;
}
